@using Airport.Models
@model IEnumerable<Departure>

@{
    ViewData["Title"] = "Вылеты";
}

<h1>Вылеты</h1>

@if (ViewBag.FlightInfo != null)
{
    <h4>@ViewBag.FlightInfo</h4>
}

<p>
    <a asp-action="CreateDeparture" class="btn btn-primary">Добавить вылет</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>Рейс</th>
            <th>Место</th>
            <th>Время вылета</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (item.Flight != null)
                    {
                        @($"{item.Flight.FlightNumber} ({item.Flight.Aircraft?.Name})")
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @item.Time.ToString("HH:mm")
                </td>
                <td>
                    <a asp-action="EditDeparture" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Изменить</a>
                    <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(@item.Id)">Удалить</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function confirmDelete(id) {
            if (confirm('Вы уверены, что хотите удалить этот вылет?')) {
                $.post('@Url.Action("DeleteDeparture")', { id: id }, function() {
                    location.reload();
                });
            }
        }
    </script>
} 