@model IEnumerable<Airport.Models.Ticket>

@{
    ViewData["Title"] = "Отчет о продаже билетов";
    
    // Группировка билетов по рейсам для статистики
    var ticketsByFlight = Model.GroupBy(t => t.Flight.FlightNumber);
    
    // Группировка билетов по источнику покупки
    var onlineTickets = Model.Where(t => t.PurchaseSource == "Online");
    var offlineTickets = Model.Where(t => t.PurchaseSource == "Offline");
    
    // Расчет выручки по источникам
    var onlineSales = onlineTickets.Sum(t => t.Flight.Price);
    var offlineSales = offlineTickets.Sum(t => t.Flight.Price);
}

<div class="container-fluid">
    <h1 class="mt-4 mb-4">@ViewData["Title"]</h1>

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <form method="get" class="form-inline d-flex align-items-center">
                        <div class="form-group me-3">
                            <label for="startDate" class="me-2">Начальная дата:</label>
                            <input type="date" id="startDate" name="startDate" class="form-control" value="@ViewBag.StartDate">
                        </div>
                        <div class="form-group me-3">
                            <label for="endDate" class="me-2">Конечная дата:</label>
                            <input type="date" id="endDate" name="endDate" class="form-control" value="@ViewBag.EndDate">
                        </div>
                        <button type="submit" class="btn btn-primary">Показать</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Общая статистика -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card h-100 bg-light">
                <div class="card-body">
                    <h5 class="card-title">Итоги за период</h5>
                    <div class="d-flex align-items-center mb-3">
                        <div class="display-4 me-3 text-primary">@ViewBag.TicketCount</div>
                        <div class="text-muted">Всего билетов</div>
                    </div>
                    <div class="d-flex align-items-center">
                        <div class="display-5 me-3 text-success">@ViewBag.TotalSales.ToString("N0") ₽</div>
                        <div class="text-muted">Общая выручка</div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-8">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title">Статистика по источникам продаж</h5>
                    <div class="row">
                        <div class="col-md-6 border-end">
                            <div class="text-center p-3">
                                <h6 class="text-muted">Онлайн-продажи</h6>
                                <div class="display-6 text-primary mb-2">@onlineTickets.Count()</div>
                                <div class="h5 text-success">@onlineSales.ToString("N0") ₽</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="text-center p-3">
                                <h6 class="text-muted">Продажи в кассе</h6>
                                <div class="display-6 text-primary mb-2">@offlineTickets.Count()</div>
                                <div class="h5 text-success">@offlineSales.ToString("N0") ₽</div>
                            </div>
                        </div>
                    </div>
                    <div class="mt-3">
                        <div class="progress" style="height: 25px;">
                            @if (ViewBag.TicketCount > 0)
                            {
                                var onlinePercent = (double)onlineTickets.Count() / ViewBag.TicketCount * 100;
                                var offlinePercent = (double)offlineTickets.Count() / ViewBag.TicketCount * 100;
                                
                                <div class="progress-bar bg-info" role="progressbar" style="width: @onlinePercent%;" 
                                    aria-valuenow="@onlinePercent" aria-valuemin="0" aria-valuemax="100">
                                    Онлайн (@onlinePercent.ToString("0.0")%)
                                </div>
                                <div class="progress-bar bg-success" role="progressbar" style="width: @offlinePercent%;" 
                                    aria-valuenow="@offlinePercent" aria-valuemin="0" aria-valuemax="100">
                                    Офлайн (@offlinePercent.ToString("0.0")%)
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Статистика по рейсам -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Продажи по рейсам</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>№ рейса</th>
                                    <th>Направление</th>
                                    <th>Самолет</th>
                                    <th>Продано билетов</th>
                                    <th>Онлайн</th>
                                    <th>В кассе</th>
                                    <th>Выручка</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var flightGroup in ticketsByFlight)
                                {
                                    var firstTicket = flightGroup.First();
                                    var ticketCount = flightGroup.Count();
                                    var totalRevenue = flightGroup.Sum(t => t.Flight.Price);
                                    var onlineCount = flightGroup.Count(t => t.PurchaseSource == "Online");
                                    var offlineCount = flightGroup.Count(t => t.PurchaseSource == "Offline");
                                    var landings = string.Join(" → ", firstTicket.Flight.Landings?.Select(l => l.Location) ?? new[] { "Н/Д" });
                                    
                                    <tr>
                                        <td><strong>@firstTicket.Flight.FlightNumber</strong></td>
                                        <td>@landings</td>
                                        <td>@firstTicket.Flight.Aircraft.Name</td>
                                        <td>@ticketCount</td>
                                        <td>@onlineCount</td>
                                        <td>@offlineCount</td>
                                        <td class="text-success">@totalRevenue.ToString("N0") ₽</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Детальная информация о билетах -->
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Детальная информация о билетах</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>№ билета</th>
                                    <th>Дата</th>
                                    <th>Время</th>
                                    <th>Источник</th>
                                    <th>Место</th>
                                    <th>Пассажир</th>
                                    <th>№ рейса</th>
                                    <th>Стоимость</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var ticket in Model)
                                {
                                    <tr>
                                        <td>@ticket.TicketNumber</td>
                                        <td>@ticket.Date.ToString("dd.MM.yyyy")</td>
                                        <td>@ticket.Time.ToString(@"hh\:mm")</td>
                                        <td>
                                            @if (ticket.PurchaseSource == "Online")
                                            {
                                                <span class="badge bg-info">Онлайн</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">Касса №@ticket.CashboxNumber</span>
                                            }
                                        </td>
                                        <td>@ticket.SeatNumber</td>
                                        <td>@ticket.PassengerName</td>
                                        <td>@ticket.Flight.FlightNumber</td>
                                        <td>@ticket.Flight.Price.ToString("N0") ₽</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Устанавливаем минимальную дату для конечной даты равной начальной
        document.getElementById('startDate').addEventListener('change', function() {
            document.getElementById('endDate').min = this.value;
        });
    </script>
} 